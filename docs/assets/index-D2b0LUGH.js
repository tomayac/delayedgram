(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const r of e.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function a(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?e.credentials="include":t.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function s(t){if(t.ep)return;t.ep=!0;const e=a(t);fetch(t.href,e)}})();const i=document.getElementById("video"),v=document.getElementById("photos"),f=document.getElementById("capture"),n=document.getElementById("canvas"),h=n.getContext("2d",{willReadFrequently:!0});let y=!1,d=null,m=null;const w=async(p,o)=>{performance.mark("draw-start");const a=p.split(`
`),s=parseInt(a[1].split(" ")[0],10),t=parseInt(a[1].split(" ")[1],10),e=a.splice(3).join(`
`).split(" ").map(l=>parseInt(l,10)),r=new ImageData(s,t);for(let l=0,u=0;l<e.length;l+=3)r.data[u+0]=e[l+0],r.data[u+1]=e[l+1],r.data[u+2]=e[l+2],r.data[u+3]=255,u+=4;const c=await createImageBitmap(r),g=document.createElement("canvas");g.width=s,g.height=t,g.getContext("2d").drawImage(c,0,0),v.append(g),performance.mark("draw-end"),performance.measure(`Draw ${o} image`,"draw-start","draw-end")};async function E(){return new Promise(async(p,o)=>{try{const a={video:{facingMode:"user"}},s=await navigator.mediaDevices.getUserMedia(a);i.addEventListener("canplay",()=>{if(!y){const t=i.videoHeight,e=i.videoWidth;i.width=e,i.height=t,n.width=e,n.height=t,h.translate(e,0),h.scale(-1,1),y=!0}p()}),i.srcObject=s}catch(a){o(a)}})}f.addEventListener("click",async()=>{if(v.innerHTML="",!i.srcObject)try{await E();return}catch(e){console.error("Error accessing camera:",e),alert(`Error accessing camera: ${e}`);return}f.classList.add("busy"),performance.mark("ppm-start"),n.width=i.videoWidth,n.height=i.videoHeight,h.drawImage(i,0,0,n.width,n.height);const p=h.getImageData(0,0,n.width,n.height),o=`P3
${n.width} ${n.height}
255
`,a=Array.from(p.data).reduce((e,r,c)=>((c+1)%4!==0&&(e+=`${r} `),e),""),s=`${o}${a}`;performance.mark("ppm-end"),performance.measure("Prepare webcam image","ppm-start","ppm-end");let t=0;d&&(d.terminate(),d=null),m&&(m.terminate(),m=null),d=new Worker(new URL("/delayedgram/assets/invert-worker-BSrrlQOM.js",import.meta.url),{type:"module"}),m=new Worker(new URL("/delayedgram/assets/grayscale-worker-BJ7kYCug.js",import.meta.url),{type:"module"}),d.addEventListener("message",async e=>{t+=1;const{ppmP3String:r}=e.data;await w(r,"invert"),t===2&&(performance.mark("filters-end"),performance.measure("Apply filters","filters-start","filters-end"),t=0,f.classList.remove("busy"),performance.getEntriesByType("measure").forEach(c=>{console.log(c.name,c.duration.toFixed(0))})),d.terminate(),d=null}),m.addEventListener("message",async e=>{t+=1;const{ppmP3String:r}=e.data;await w(r,"grayscale"),t===2&&(performance.mark("filters-end"),performance.measure("Apply filters","filters-start","filters-end"),t=0,f.classList.remove("busy"),performance.getEntriesByType("measure").forEach(c=>{console.log(c.name,c.duration.toFixed(0))})),m.terminate(),m=null}),performance.mark("filters-start"),d.postMessage({ppmP3String:s}),m.postMessage({ppmP3String:s})});
